/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HumanResourceManagement;



import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
//import pms_sulaiman.Report;

/**
 *
 * @author DELL
 */
public class EmployeeDetails extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeDetails
     */
    
    boolean f_name,l_name,gender,status,dob,nic,contact,email,address,qualification,qualificationdetails,language,desigination,employee,joindate,password;
    boolean search=false;
    Connection con;
    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
    
    public EmployeeDetails() {
        initComponents();
        e_name.setText("");
        e_last.setText("");
        e_status.setText("");
        e_gender.setText("");
        e_dob.setText("");
        e_contact.setText("");
        e_email.setText("");
        e_address.setText("");
        e_nic.setText("");
        e_qualification.setText("");
        e_qualificationdetails.setText("");
        e_language.setText("");
        e_desigination.setText("");
        e_password1.setText("");
        e_password2.setText("");
        e_employee.setText("");
        e_joindate.setText("");
        
        
        txt_search.setEnabled(false);
        bt_search.setEnabled(false);
        try
        {
            con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital","root","");
            //JOptionPane.showMessageDialog(null,"connected with "+con.toString());
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"not connect to server and message is"+e.getMessage());
        }
        
        
        String sql = "SELECT * FROM employee";
 

        try
        {
                       Statement statement = con.createStatement();
            ResultSet result = statement.executeQuery(sql);
 
            int count = 0;
 
            
            while(result.next())
            {
                String idd = result.getString(1);
                id.setText("EM"+(Integer.parseInt(idd.substring(2,9))+1));
            }
        }
        catch(SQLException ex)
        {
            id.setText("EM1111111");
        }
        try
        {
            Statement stat = con.createStatement();
            ResultSet res = stat.executeQuery("SELECT * FROM `employee`");
            
            view.setModel(DbUtils.resultSetToTableModel(res));
 
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

        /* 
        Set the date start
        */
        SimpleDateFormat date1 = new SimpleDateFormat("dd/MM/yyyy");
              Date dateValue=null;
 
        
        try
        {
            dateValue = date1.parse("1/1/1930");
        
                //dateValue = date.parse(resultset.getstring(1));
        } 
        catch (ParseException ex) 
        {
            JOptionPane.showMessageDialog(null, "error");
        }
        //datedob.setMinSelectableDate(dateValue);
        Date date=new Date();
        datedob.setMaxSelectableDate(date);
        
        /*
        Set the date end with max and minimum date 
        */
        
        
        rb_permanant.setEnabled(false);
        rb_temprory.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_last = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rb_male = new javax.swing.JRadioButton();
        rb_female = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        j_status = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_contact = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_address = new javax.swing.JTextField();
        e_name = new javax.swing.JLabel();
        e_last = new javax.swing.JLabel();
        e_gender = new javax.swing.JLabel();
        e_status = new javax.swing.JLabel();
        e_dob = new javax.swing.JLabel();
        e_nic = new javax.swing.JLabel();
        e_contact = new javax.swing.JLabel();
        e_email = new javax.swing.JLabel();
        e_address = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ch_ol = new javax.swing.JCheckBox();
        ch_al = new javax.swing.JCheckBox();
        ch_uni = new javax.swing.JCheckBox();
        ch_oth = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        txt_qualification1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        ch_english = new javax.swing.JCheckBox();
        ch_tamil = new javax.swing.JCheckBox();
        ch_singala = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        s_employee = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        rb_permanant = new javax.swing.JRadioButton();
        rb_temprory = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        e_qualification = new javax.swing.JLabel();
        e_qualificationdetails = new javax.swing.JLabel();
        e_language = new javax.swing.JLabel();
        e_desigination = new javax.swing.JLabel();
        e_employee = new javax.swing.JLabel();
        e_joindate = new javax.swing.JLabel();
        bt_search = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        txt_password1 = new javax.swing.JPasswordField();
        txt_password2 = new javax.swing.JPasswordField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        e_password1 = new javax.swing.JLabel();
        e_password2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        bt_cancel = new javax.swing.JButton();
        bt_delete = new javax.swing.JButton();
        bt_edit = new javax.swing.JButton();
        bt_add = new javax.swing.JButton();
        datedob = new com.toedter.calendar.JDateChooser();
        datejoin = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        view = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel1.setText("Personal Details");

        jLabel2.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel2.setText("First Name");

        txt_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt_nameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txt_nameMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txt_nameMouseReleased(evt);
            }
        });
        txt_name.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt_nameInputMethodTextChanged(evt);
            }
        });
        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });
        txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nameKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel3.setText("Last Name");

        txt_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lastActionPerformed(evt);
            }
        });
        txt_last.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_lastKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel4.setText("Gender");

        rb_male.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        rb_male.setText("Male");
        rb_male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_maleActionPerformed(evt);
            }
        });

        rb_female.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        rb_female.setText("Female");
        rb_female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_femaleActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel5.setText("Status");

        j_status.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        j_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Single", "Married" }));
        j_status.setToolTipText("");
        j_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_statusActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel6.setText("Date Of Birth");

        jLabel7.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel7.setText("NIC Number");

        txt_nic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txt_nicMouseReleased(evt);
            }
        });
        txt_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nicActionPerformed(evt);
            }
        });
        txt_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nicKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nicKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel8.setText("Contact Number");

        txt_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contactActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel9.setText("Email Address");

        txt_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emailActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel10.setText("Address");

        txt_address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addressActionPerformed(evt);
            }
        });

        e_name.setForeground(new java.awt.Color(204, 0, 0));
        e_name.setText("Error");

        e_last.setForeground(new java.awt.Color(204, 0, 0));
        e_last.setText("Error");

        e_gender.setForeground(new java.awt.Color(204, 0, 0));
        e_gender.setText("Error");

        e_status.setForeground(new java.awt.Color(204, 0, 0));
        e_status.setText("Error");

        e_dob.setForeground(new java.awt.Color(204, 0, 0));
        e_dob.setText("Error");

        e_nic.setForeground(new java.awt.Color(204, 0, 0));
        e_nic.setText("Error");

        e_contact.setForeground(new java.awt.Color(204, 0, 0));
        e_contact.setText("Error");

        e_email.setForeground(new java.awt.Color(204, 0, 0));
        e_email.setText("Error");

        e_address.setForeground(new java.awt.Color(204, 0, 0));
        e_address.setText("Error");

        jLabel11.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel11.setText("Others Details");

        jLabel12.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel12.setText("Employee ID");

        id.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        id.setText("Employee ID");

        jLabel13.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel13.setText("Qualification");

        ch_ol.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        ch_ol.setText("O/L");
        ch_ol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_olActionPerformed(evt);
            }
        });

        ch_al.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        ch_al.setText("A/L");
        ch_al.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_alActionPerformed(evt);
            }
        });

        ch_uni.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        ch_uni.setText("University");
        ch_uni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_uniActionPerformed(evt);
            }
        });

        ch_oth.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        ch_oth.setText("Others");
        ch_oth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_othActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel14.setText("Doctor Specialization");

        txt_qualification1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_qualification1ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel15.setText("Knowledge of languge");

        ch_english.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        ch_english.setText("English");
        ch_english.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_englishActionPerformed(evt);
            }
        });

        ch_tamil.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        ch_tamil.setText("Tamil");
        ch_tamil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_tamilActionPerformed(evt);
            }
        });

        ch_singala.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        ch_singala.setText("Sinhala");
        ch_singala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_singalaActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel16.setText("position");

        s_employee.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        s_employee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Doctor", "Nurse", "Pharmacist", "Receptionest", "Lab Assistant", "Driver", "Administrator", "manager", "Assi.manager", "Accountant", "labour", "director", "technician", "clerk", " " }));
        s_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s_employeeActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel17.setText("Doctor Type ");

        rb_permanant.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        rb_permanant.setText("Permanent Doctor");
        rb_permanant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_permanantActionPerformed(evt);
            }
        });

        rb_temprory.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        rb_temprory.setText("Visiting Doctor");
        rb_temprory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_temproryActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel18.setText("Joing Date");

        e_qualification.setForeground(new java.awt.Color(204, 0, 0));
        e_qualification.setText("Error");

        e_qualificationdetails.setForeground(new java.awt.Color(204, 0, 0));
        e_qualificationdetails.setText("Error");

        e_language.setForeground(new java.awt.Color(204, 0, 0));
        e_language.setText("Error");

        e_desigination.setForeground(new java.awt.Color(204, 0, 0));
        e_desigination.setText("Error");

        e_employee.setForeground(new java.awt.Color(204, 0, 0));
        e_employee.setText("Error");

        e_joindate.setForeground(new java.awt.Color(204, 0, 0));
        e_joindate.setText("Error");

        bt_search.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        bt_search.setText("Search");
        bt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1281, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );

        txt_password1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_password1ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel19.setText("Confirm Password");

        jLabel20.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel20.setText("Password");

        e_password1.setForeground(new java.awt.Color(204, 0, 0));
        e_password1.setText("Error");

        e_password2.setForeground(new java.awt.Color(204, 0, 0));
        e_password2.setText("Error");

        jButton1.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bt_cancel.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        bt_cancel.setText("Cancel");
        bt_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelActionPerformed(evt);
            }
        });

        bt_delete.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        bt_delete.setText("Delete");
        bt_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_deleteActionPerformed(evt);
            }
        });

        bt_edit.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        bt_edit.setText("Edit");
        bt_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editActionPerformed(evt);
            }
        });

        bt_add.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        bt_add.setText("Add");
        bt_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addActionPerformed(evt);
            }
        });

        view.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        view.setEnabled(false);
        jScrollPane2.setViewportView(view);

        jButton2.setText("Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DEMO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(e_nic))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(e_contact))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(e_email))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(e_name))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_last, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(e_last))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rb_male)
                                        .addGap(37, 37, 37)
                                        .addComponent(rb_female)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(e_gender))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(datedob, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(j_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(e_status)
                                            .addComponent(e_dob)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(e_address)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel13)
                                                    .addComponent(jLabel17)
                                                    .addComponent(jLabel18)
                                                    .addComponent(jLabel20)
                                                    .addComponent(jLabel19)
                                                    .addComponent(jLabel14)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(144, 144, 144)
                                                .addComponent(jLabel16)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(73, 73, 73))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(144, 144, 144)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(rb_permanant)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(rb_temprory)
                                                        .addGap(35, 35, 35)
                                                        .addComponent(e_employee))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(datejoin, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(e_joindate))
                                                    .addComponent(id)
                                                    .addComponent(s_employee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(ch_ol)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ch_al)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ch_uni)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ch_oth)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(e_qualification))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(179, 179, 179)
                                                        .addComponent(e_qualificationdetails))
                                                    .addComponent(txt_qualification1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(e_desigination))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(ch_english)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(ch_singala)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(ch_tamil)))
                                                .addGap(18, 18, 18)
                                                .addComponent(e_language)
                                                .addGap(121, 121, 121)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bt_delete)
                                            .addComponent(bt_add, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bt_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton2)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(txt_password1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(e_password1))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(txt_password2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(e_password2)))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(bt_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(bt_search))))
                                        .addGap(4, 4, 4)))))
                        .addGap(29, 29, 29)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(480, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(755, 755, 755)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(e_name)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel12)
                                        .addComponent(id)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txt_last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)
                                            .addComponent(e_last))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(rb_male)
                                            .addComponent(rb_female)
                                            .addComponent(e_gender)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(ch_ol)
                                                .addComponent(ch_al)
                                                .addComponent(ch_uni)
                                                .addComponent(ch_oth)
                                                .addComponent(e_qualification))
                                            .addComponent(jLabel13))
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel4))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel11))
                                        .addGap(106, 106, 106)
                                        .addComponent(e_qualificationdetails))
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(83, 83, 83)
                                        .addComponent(jButton2)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(bt_add, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 11, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(j_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e_status))
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(e_dob)
                                    .addComponent(datedob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e_nic))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(e_contact))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(ch_english)
                                            .addComponent(ch_singala)
                                            .addComponent(ch_tamil)
                                            .addComponent(e_language)
                                            .addComponent(jLabel15))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(s_employee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(e_desigination))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(bt_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(txt_qualification1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(rb_permanant)
                                    .addComponent(rb_temprory)
                                    .addComponent(e_employee)
                                    .addComponent(bt_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(datejoin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e_joindate))))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e_email)
                            .addComponent(jLabel20)
                            .addComponent(txt_password1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e_password1)
                            .addComponent(bt_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel10)
                                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e_address)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_password2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e_password2))))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        OverView ov=new OverView();
        ov.show();
        this.hide();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_password1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_password1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_password1ActionPerformed

    private void bt_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addActionPerformed
        // TODO add your handling code here:
        
        if(datedob.getDate()==null)
        {
            dob=false;
            e_dob.setText("Select a date");
        }
        else
        {
            dob=true;
            e_dob.setText("");
        }
        check();
        if(l_name &&  f_name && gender && dob && status && address && password && email && contact && nic && qualification && qualificationdetails && language && desigination && employee && joindate)
        {
            JOptionPane.showMessageDialog(null,"All informations are validated");

            try
            {
                String gen="";
                String qualifiol="null";
                String qualifial="null";
                String qualifioth="null";
                String lanen="null";
                String lantam="null";
                String lansing="null";
                if(rb_female.isSelected())
                {
                    gen="Female";
                }
                else if(rb_male.isSelected())
                {
                    gen="Male";
                }
                if(ch_ol.isSelected())
                {
                    qualifiol="OL";
                }
                if(ch_al.isSelected())
                {
                    qualifial="AL";
                }
                if(ch_oth.isSelected())
                {
                    qualifioth="OTHERS";
                }
                if(ch_tamil.isSelected())
                {
                    lantam="Tamil";
                }
                if(ch_english.isSelected())
                {
                    lanen="English";
                }
                if(ch_singala.isSelected())
                {
                    lansing="Singala";
                }

                String emptype="";
                if(s_employee.getSelectedIndex()==1)
                {
                    if(rb_permanant.isSelected())
                    {
                        emptype="Permanant";
                    }
                    else if(rb_temprory.isSelected())
                    {
                        emptype="Visiting";
                    }
                }
                else
                {
                    emptype=null;
                }

                String sql = "INSERT INTO `employee` (`idEmployee`,`fname`,`lname`,`gender`,`status`,`dob`,`nic`,`contactnumber`,`email`,`address`,`ol`,`al`,`others`,`qualificationdetails`,`english`,`tamil`,`singala`,`desigination`,`employee`,`join`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

                PreparedStatement statement = con.prepareStatement(sql);
                statement.setString(1, id.getText());
                statement.setString(2, txt_name.getText());
                statement.setString(3, txt_last.getText());
                statement.setString(4,gen );
                statement.setString(5,j_status.getSelectedItem().toString());
                statement.setString(6,formatter.format(datedob.getDate()).toString());
                statement.setString(7,txt_nic.getText());
                statement.setString(8,txt_contact.getText());
                statement.setString(9,txt_email.getText());
                statement.setString(10,txt_address.getText());
                statement.setString(11,qualifiol);
                statement.setString(12,qualifial);
                statement.setString(13,qualifioth);
                statement.setString(14,txt_qualification1.getText());
                statement.setString(15,lanen);
                statement.setString(16,lantam);
                statement.setString(17,lansing);
                statement.setString(18,s_employee.getSelectedItem().toString());
                statement.setString(19,emptype);
                statement.setString(20, formatter.format(datejoin.getDate()).toString());

                int rowsInserted = statement.executeUpdate();

                String sql2 = "INSERT INTO `login_employee` (`employeeid`,`username`,`password`) VALUES (?, ?, ?)";

                PreparedStatement statement2 = con.prepareStatement(sql2);
                statement2.setString(1, id.getText());
                statement2.setString(2, id.getText());
                statement2.setString(3, txt_password1.getText());

                statement2.executeUpdate();

                if (rowsInserted > 0)
                {
                    JOptionPane.showMessageDialog(null,"A new user was inserted successfully!");

                    String sql1 = "SELECT * FROM employee";

                    try
                    {

                        Statement statement1 = con.createStatement();
                        ResultSet result = statement1.executeQuery(sql1);

                        int count = 0;

                        int rows=0;
                        while (result.next())
                        {
                            rows++;
                            String idd = result.getString(1);
                            id.setText("EM"+(Integer.parseInt(idd.substring(2,9))+1));
                        }
                        if(rows<1)
                        {
                            id.setText("EM1111111");
                        }
                    }
                    catch(SQLException ex)
                    {
                        id.setText("EM1111111");
                    }
                }

                txt_name.setText("");
                txt_last.setText("");
                rb_male.setSelected(false);
                rb_female.setSelected(false);
                j_status.setSelectedIndex(0);
                datedob.setDate(null);
                txt_nic.setText("");
                txt_contact.setText("");
                txt_email.setText("");
                txt_address.setText("");
                ch_ol.setSelected(false);
                ch_al.setSelected(false);
                ch_oth.setSelected(false);
                txt_qualification1.setText("");
                ch_english.setSelected(false);
                ch_tamil.setSelected(false);
                ch_singala.setSelected(false);
                rb_permanant.setSelected(false);
                rb_temprory.setSelected(false);
                datejoin.setDate(null);
                s_employee.setSelectedIndex(0);
                txt_password1.setText("");
                txt_password2.setText("");

                rb_permanant.setEnabled(false);
                rb_temprory.setEnabled(false);
                
                Statement stat = con.createStatement();
                ResultSet res = stat.executeQuery("SELECT * FROM employee");

                view.setModel(DbUtils.resultSetToTableModel(res));

            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

        }
        else
        {
            JOptionPane.showMessageDialog(null,"Check your all inputs");
        }
    }//GEN-LAST:event_bt_addActionPerformed

    private void bt_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editActionPerformed
        // TODO add your handling code here:
        bt_add.setEnabled(false);
        bt_delete.setEnabled(false);
        txt_search.setEnabled(true);
        bt_search.setEnabled(true);

        check();
        if(search)
        {
            if(l_name &&  f_name && gender && dob && status  && address && email && contact && nic && qualification && qualificationdetails && language && desigination && employee && joindate)
            {
                JOptionPane.showMessageDialog(null,"All informations are validated");

                try
                {
                    String gen="";
                    String qualifiol="null";
                    String qualifial="null";
                    String qualifioth="null";
                    String lanen="null";
                    String lantam="null";
                    String lansing="null";
                    if(rb_female.isSelected())
                    {
                        gen="Female";
                    }
                    else if(rb_male.isSelected())
                    {
                        gen="Male";
                    }
                    if(ch_ol.isSelected())
                    {
                        qualifiol="OL";
                    }
                    if(ch_al.isSelected())
                    {
                        qualifial="AL";
                    }
                    if(ch_oth.isSelected())
                    {
                        qualifioth="OTHERS";
                    }
                    if(ch_tamil.isSelected())
                    {
                        lantam="Tamil";
                    }
                    if(ch_english.isSelected())
                    {
                        lanen="English";
                    }
                    if(ch_singala.isSelected())
                    {
                        lansing="Singala";
                    }

                    String emptype="";
                    if(s_employee.getSelectedIndex()==1)
                    {
                        if(rb_permanant.isSelected())
                        {
                            emptype="Permanant";
                        }
                        else if(rb_temprory.isSelected())
                        {
                            emptype="Visiting";
                        }
                    }
                    else
                    {
                        emptype=null;
                    }

                    String sql = "UPDATE  `employee` set `idEmployee`=?,`fname`=?,`lname`=?,`gender`=?,`status`=?,`dob`=?,`nic`=?,`contactnumber`=?,`email`=?,`address`=?,`ol`=?,`al`=?,`others`=?,`qualificationdetails`=?,`english`=?,`tamil`=?,`singala`=?,`desigination`=?,`employee`=?,`join`=? WHERE `idEmployee`='"+id.getText()+"'";

                    PreparedStatement statement = con.prepareStatement(sql);
                    statement.setString(1, id.getText());
                    statement.setString(2, txt_name.getText());
                    statement.setString(3, txt_last.getText());
                    statement.setString(4,gen );
                    statement.setString(5,j_status.getSelectedItem().toString());
                    statement.setString(6,formatter.format(datedob.getDate()).toString());
                    statement.setString(7,txt_nic.getText());
                    statement.setString(8,txt_contact.getText());
                    statement.setString(9,txt_email.getText());
                    statement.setString(10,txt_address.getText());
                    statement.setString(11,qualifiol);
                    statement.setString(12,qualifial);
                    statement.setString(13,qualifioth);
                    statement.setString(14,txt_qualification1.getText());
                    statement.setString(15,lanen);
                    statement.setString(16,lantam);
                    statement.setString(17,lansing);
                    statement.setString(18,s_employee.getSelectedItem().toString());
                    statement.setString(19,emptype);
                    statement.setString(20, formatter.format(datejoin.getDate()).toString());

                    int rowsupdate = statement.executeUpdate();
                    if (rowsupdate > 0)
                    {
                        JOptionPane.showMessageDialog(null,"The  user was updated successfully!");

                        String sql1 = "SELECT * FROM employee";

                        try
                        {
                            Statement stat = con.createStatement();
                            ResultSet res = stat.executeQuery("SELECT * FROM `employee`");

                            view.setModel(DbUtils.resultSetToTableModel(res));

                        }
                        catch(Exception ex)
                        {
                            JOptionPane.showMessageDialog(null, ex.getMessage());
                        }

                        try
                        {

                            Statement statement1 = con.createStatement();
                            ResultSet result = statement1.executeQuery(sql1);

                            int rows=0;
                            while (result.next())
                            {
                                rows++;
                                String idd = result.getString(1);
                                id.setText("EM"+(Integer.parseInt(idd.substring(2,9))+1));
                            }
                            if(rows<1)
                            {
                                id.setText("EM1111111");
                            }
                        }
                        catch(SQLException ex)
                        {
                            JOptionPane.showMessageDialog(null, ex.getMessage());
                            id.setText("EM1111111");
                        }
                    }

                    txt_name.setText("");
                    txt_last.setText("");
                    rb_male.setSelected(false);
                    rb_female.setSelected(false);
                    j_status.setSelectedIndex(0);
                    datedob.setDate(null);
                    txt_nic.setText("");
                    txt_contact.setText("");
                    txt_email.setText("");
                    txt_address.setText("");
                    ch_ol.setSelected(false);
                    ch_al.setSelected(false);
                    ch_oth.setSelected(false);
                    txt_qualification1.setText("");
                    ch_english.setSelected(false);
                    ch_tamil.setSelected(false);
                    ch_singala.setSelected(false);
                    rb_permanant.setSelected(false);
                    rb_temprory.setSelected(false);
                    s_employee.setSelectedIndex(0);
                    datejoin.setDate(null);
                    txt_search.setText("");

                    txt_password1.setText("");
                    txt_password2.setText("");

                    rb_permanant.setEnabled(false);
                    rb_temprory.setEnabled(false);
                    
                    txt_password1.setEnabled(true);
                    txt_password2.setEnabled(true);
                    txt_search.setEnabled(false);
                    bt_search.setEnabled(false);
                    bt_add.setEnabled(true);
                    bt_delete.setEnabled(true);
                    search=false;
                    

                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }

            }
            else
            {
                JOptionPane.showMessageDialog(null,"Check your all inputs");
            }
        }
        else
        {
            //JOptionPane.showMessageDialog(null, "User Not found");
            txt_name.setText("");
            txt_last.setText("");
            rb_male.setSelected(false);
            rb_female.setSelected(false);
            j_status.setSelectedIndex(0);
            datedob.setDate(null);
            txt_nic.setText("");
            txt_contact.setText("");
            txt_email.setText("");
            txt_address.setText("");
            ch_ol.setSelected(false);
            ch_al.setSelected(false);
            ch_oth.setSelected(false);
            txt_qualification1.setText("");
            ch_english.setSelected(false);
            ch_tamil.setSelected(false);
            ch_singala.setSelected(false);
            rb_permanant.setSelected(false);
            rb_temprory.setSelected(false);
            datejoin.setDate(null);
            s_employee.setSelectedIndex(0);

            txt_password1.setText("");
            txt_password2.setText("");

            e_password1.setText("");
            e_password2.setText("");

            e_name.setText("");
            e_last.setText("");
            e_status.setText("");
            e_gender.setText("");
            e_dob.setText("");
            e_contact.setText("");
            e_email.setText("");
            e_address.setText("");
            e_nic.setText("");
            e_qualification.setText("");
            e_qualificationdetails.setText("");
            e_language.setText("");
            e_desigination.setText("");
            e_employee.setText("");
            e_joindate.setText("");
            rb_permanant.setEnabled(false);
            rb_temprory.setEnabled(false);
        }
    }//GEN-LAST:event_bt_editActionPerformed

    private void bt_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_deleteActionPerformed
        // TODO add your handling code here:
        txt_password1.setEnabled(false);
        txt_password2.setEnabled(false);
        bt_add.setEnabled(false);
        bt_edit.setEnabled(false);
        txt_search.setEnabled(true);
        bt_search.setEnabled(true);

        if(search)
        {
            try
            {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure want to Delete", "Delete Option", dialogButton);
                if(dialogResult == 0)
                {
                    String sql2 = "DELETE FROM `login_employee` WHERE `employeeid`='"+id.getText()+"'";
                    PreparedStatement statement2 = con.prepareStatement(sql2);
                    int rowsDeleted1 = statement2.executeUpdate();

                    String sql = "DELETE FROM `employee` WHERE `idEmployee`='"+id.getText()+"'";
                    PreparedStatement statement = con.prepareStatement(sql);
                    int rowsDeleted = statement.executeUpdate();
                    if (rowsDeleted > 0 && rowsDeleted1>0)
                    {
                        JOptionPane.showMessageDialog(null,"A user was deleted successfully!");
                        String sql1 = "SELECT * FROM employee";
                        txt_search.setText("");
                        try
                        {
                            search=false;
                            Statement statement1 = con.createStatement();
                            ResultSet result = statement1.executeQuery(sql1);

                            int rows=0;
                            while (result.next())
                            {
                                rows++;
                                String idd = result.getString(1);
                                id.setText("EM"+(Integer.parseInt(idd.substring(2,9))+1));
                            }
                            if(rows<1)
                            {
                                id.setText("EM1111111");
                            }
                        }
                        catch(SQLException ex)
                        {
                            id.setText("EM1111111");
                        }
                    }

                    try
                    {
                        Statement stat = con.createStatement();
                        ResultSet res = stat.executeQuery("SELECT * FROM `employee`");

                        view.setModel(DbUtils.resultSetToTableModel(res));

                    }
                    catch(Exception ex)
                    {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }

                    txt_name.setText("");
                    txt_last.setText("");
                    rb_male.setSelected(false);
                    rb_female.setSelected(false);
                    j_status.setSelectedIndex(0);
                    datedob.setDate(null);
                    txt_nic.setText("");
                    txt_contact.setText("");
                    txt_email.setText("");
                    txt_address.setText("");
                    ch_ol.setSelected(false);
                    ch_al.setSelected(false);
                    ch_oth.setSelected(false);
                    txt_qualification1.setText("");
                    ch_english.setSelected(false);
                    ch_tamil.setSelected(false);
                    ch_singala.setSelected(false);
                    rb_permanant.setSelected(false);
                    rb_temprory.setSelected(false);
                    s_employee.setSelectedIndex(0);
                    datejoin.setDate(null);
                    txt_search.setEnabled(false);
                    bt_search.setEnabled(false);
                    bt_add.setEnabled(true);
                    bt_edit.setEnabled(true);
                    search=false;

                    txt_password1.setText("");
                    txt_password2.setText("");

                    rb_permanant.setEnabled(false);
                    rb_temprory.setEnabled(false);
                    txt_password1.setEnabled(true);
                    txt_password2.setEnabled(true);

                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Your Delete Option was Cancelled");

                    txt_password1.setEnabled(true);
                    txt_password2.setEnabled(true);
                    txt_search.setText("");
                    txt_search.setEnabled(false);
                    bt_search.setEnabled(false);
                    bt_add.setEnabled(true);
                    bt_edit.setEnabled(true);
                    search=false;
                    String sql1 = "SELECT * FROM employee";

                    try
                    {

                        Statement statement1 = con.createStatement();
                        ResultSet result = statement1.executeQuery(sql1);

                        int rows=0;
                        while (result.next())
                        {
                            rows++;
                            String idd = result.getString(1);
                            id.setText("EM"+(Integer.parseInt(idd.substring(2,9))+1));
                        }
                        if(rows<1)
                        {
                            id.setText("EM1111111");
                        }
                    }
                    catch(SQLException ex)
                    {
                        id.setText("EM1111111");
                    }
                }

                txt_name.setText("");
                txt_last.setText("");
                rb_male.setSelected(false);
                rb_female.setSelected(false);
                j_status.setSelectedIndex(0);
                datedob.setDate(null);
                txt_nic.setText("");
                txt_contact.setText("");
                txt_email.setText("");
                txt_address.setText("");
                ch_ol.setSelected(false);
                ch_al.setSelected(false);
                ch_oth.setSelected(false);
                txt_qualification1.setText("");
                ch_english.setSelected(false);
                ch_tamil.setSelected(false);
                ch_singala.setSelected(false);
                rb_permanant.setSelected(false);
                rb_temprory.setSelected(false);
                s_employee.setSelectedIndex(0);
                datejoin.setDate(null);
                txt_password1.setText("");
                txt_password2.setText("");

                e_password1.setText("");
                e_password2.setText("");

                txt_password1.setEnabled(true);
                txt_password2.setEnabled(true);
                
                rb_permanant.setEnabled(false);
                rb_temprory.setEnabled(false);
            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null,ex.getMessage());
            }
        }

        else
        {
            //JOptionPane.showMessageDialog(null, "User Not found");
            txt_name.setText("");
            txt_last.setText("");
            rb_male.setSelected(false);
            rb_female.setSelected(false);
            j_status.setSelectedIndex(0);
            datedob.setDate(null);
            txt_nic.setText("");
            txt_contact.setText("");
            txt_email.setText("");
            txt_address.setText("");
            ch_ol.setSelected(false);
            ch_al.setSelected(false);
            ch_oth.setSelected(false);
            txt_qualification1.setText("");
            ch_english.setSelected(false);
            ch_tamil.setSelected(false);
            ch_singala.setSelected(false);
            rb_permanant.setSelected(false);
            rb_temprory.setSelected(false);
            datejoin.setDate(null);
            s_employee.setSelectedIndex(0);

            txt_password1.setText("");
            txt_password2.setText("");

            e_password1.setText("");
            e_password2.setText("");

            // txt_password1.setEnabled(true);
            //txt_password2.setEnabled(true);

            e_name.setText("");
            e_last.setText("");
            e_status.setText("");
            e_gender.setText("");
            e_dob.setText("");
            e_contact.setText("");
            e_email.setText("");
            e_address.setText("");
            e_nic.setText("");
            e_qualification.setText("");
            e_qualificationdetails.setText("");
            e_language.setText("");
            e_desigination.setText("");
            e_employee.setText("");
            e_joindate.setText("");
            
            rb_permanant.setEnabled(false);
            rb_temprory.setEnabled(false);
        }
    }//GEN-LAST:event_bt_deleteActionPerformed

    private void bt_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelActionPerformed
        // TODO add your handling code here:
        search=false;
        txt_name.setText("");
        ch_uni.setSelected(false);
        txt_last.setText("");
        rb_male.setSelected(false);
        rb_female.setSelected(false);
        j_status.setSelectedIndex(0);
        datedob.setDate(null);
        txt_nic.setText("");
        txt_contact.setText("");
        txt_email.setText("");
        txt_address.setText("");
        ch_ol.setSelected(false);
        ch_al.setSelected(false);
        ch_oth.setSelected(false);
        txt_qualification1.setText("");
        ch_english.setSelected(false);
        ch_tamil.setSelected(false);
        ch_singala.setSelected(false);
        rb_permanant.setSelected(false);
        rb_temprory.setSelected(false);
        s_employee.setSelectedIndex(0);
        datejoin.setDate(null);

        e_name.setText("");
        e_last.setText("");
        e_status.setText("");
        e_gender.setText("");
        e_dob.setText("");
        e_contact.setText("");
        e_email.setText("");
        e_address.setText("");
        e_nic.setText("");
        e_qualification.setText("");
        e_qualificationdetails.setText("");
        e_language.setText("");
        e_desigination.setText("");
        e_employee.setText("");
        e_joindate.setText("");

        txt_search.setEnabled(false);
        bt_search.setEnabled(false);

        txt_password1.setEnabled(true);
        txt_password2.setEnabled(true);

        bt_add.setEnabled(true);
        bt_delete.setEnabled(true);
        bt_edit.setEnabled(true);
        
        rb_permanant.setEnabled(false);
        rb_temprory.setEnabled(false);

        try
        {
            con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/sulaiman","root","");
            //JOptionPane.showMessageDialog(null,"connected with "+con.toString());
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"not connect to server and message is"+e.getMessage());
        }

        String sql = "SELECT * FROM employee";

        try
        {

            Statement statement = con.createStatement();
            ResultSet result = statement.executeQuery(sql);

            int count = 0;

            while (result.next())
            {
                count++;
                String idd = result.getString(1);
                id.setText("EM"+(Integer.parseInt(idd.substring(2,9))+1));
            }
            if(count==0)
            {
                id.setText("EM1111111");
            }
        }
        catch(SQLException ex)
        {
            id.setText("EM1111111");
        }
    }//GEN-LAST:event_bt_cancelActionPerformed

    private void bt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_searchActionPerformed
        // TODO add your handling code here:
        if(txt_search.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Input the values to search");
        }
        else
        {
            String sql1 = "SELECT * FROM employee where `idEmployee`='"+txt_search.getText()+"'";
            try
            {

                Statement statement1 = con.createStatement();
                ResultSet result = statement1.executeQuery(sql1);

                int count = 0;
                if (result.next())
                {
                    search=true;
                    id.setText(""+result.getString(1));
                    txt_name.setText(""+result.getString(2));
                    txt_last.setText(""+result.getString(3));

                    if(result.getString(4).equals("Male"))
                    {
                        rb_male.setSelected(true);
                    }
                    else
                    {
                        rb_female.setSelected(true);
                    }
                    if(result.getString(5).equals("Single"))
                    {
                        j_status.setSelectedIndex(1);
                    }
                    else if(result.getString(5).equals("Married"))
                    {
                        j_status.setSelectedIndex(2);
                    }
                    
                    Date dateValue=null;
                    SimpleDateFormat date1 = new SimpleDateFormat("dd/MM/yyyy");
                    try
                    {
                        dateValue = date1.parse(result.getString(6).toString());
                        datedob.setDate(dateValue);
                    } 
                    catch (ParseException ex) 
                    {
                    }
                    txt_nic.setText(""+result.getString(7));
                    txt_contact.setText(""+result.getString(8));
                    txt_email.setText(""+result.getString(9));
                    txt_address.setText(""+result.getString(10));

                    if(result.getString(11).equals("OL"))
                    {
                        ch_ol.setSelected(true);
                    }
                    else
                    {
                        ch_ol.setSelected(false);
                    }
                    if(result.getString(12).equals("AL"))
                    {
                        ch_al.setSelected(true);
                    }
                    else
                    {
                        ch_ol.setSelected(false);
                    }
                    if(result.getString(13).equals("OTHERS"))
                    {
                        ch_oth.setSelected(true);
                    }
                    else
                    {
                        ch_oth.setSelected(false);
                    }

                    txt_qualification1.setText(""+result.getString(14));

                    if(result.getString(15).equals("English"))
                    {
                        ch_english.setSelected(true);
                    }
                    else
                    {
                        ch_english.setSelected(false);
                    }

                    if(result.getString(16).equals("Tamil"))
                    {
                        ch_tamil.setSelected(true);
                    }
                    else
                    {
                        ch_tamil.setSelected(false);
                    }
                    if(result.getString(17).equals("Singala"))
                    {
                        ch_singala.setSelected(true);
                    }
                    else
                    {
                        ch_singala.setSelected(false);
                    }
                    
                    rb_permanant.setSelected(false);
                    rb_temprory.setSelected(false);

                    if(result.getString(18).equals("Doctor"))
                    {
                        s_employee.setSelectedIndex(1);
                        rb_permanant.setEnabled(true);
                        rb_temprory.setEnabled(true);
                        if(result.getString(19).equals("Permanant"))
                        {
                            rb_permanant.setSelected(true);
                        }
                        else if(result.getString(19).equals("Visiting"))
                        {
                            rb_temprory.setSelected(false);
                        }
                    }
                    else if(result.getString(18).equals("Nurse"))
                    {
                        rb_permanant.setEnabled(false);
                        rb_temprory.setEnabled(false);
                        s_employee.setSelectedIndex(2);
                    }
                    else if(result.getString(18).equals("Pharmacist"))
                    {
                        rb_permanant.setEnabled(false);
                        rb_temprory.setEnabled(false);
                        s_employee.setSelectedIndex(3);
                    }
                    else if(result.getString(19).equals("Receptionest"))
                    {
                        rb_permanant.setEnabled(false);
                        rb_temprory.setEnabled(false);
                        s_employee.setSelectedIndex(4);
                    }
                    else if(result.getString(18).equals("Lab Assistant"))
                    {
                        rb_permanant.setEnabled(false);
                        rb_temprory.setEnabled(false);
                        s_employee.setSelectedIndex(5);
                    }
                    else if(result.getString(18).equals("Driver"))
                    {
                        rb_permanant.setEnabled(false);
                        rb_temprory.setEnabled(false);
                        s_employee.setSelectedIndex(6);
                    }
                    else if(result.getString(18).equals("Other"))
                    {
                        rb_permanant.setEnabled(false);
                        rb_temprory.setEnabled(false);
                        s_employee.setSelectedIndex(7);
                    }

                    Date dateValue1=null;
                    SimpleDateFormat date2= new SimpleDateFormat("dd/MM/yyyy");
                    try
                    {
                        dateValue1 = date2.parse(result.getString(6).toString());
                        datejoin.setDate(dateValue1);
                    } 
                    catch (ParseException ex) 
                    {
                    }

                }
                else
                {
                    JOptionPane.showMessageDialog(null, "User Not found");
                    bt_search.setEnabled(false);
                    txt_search.setEnabled(false);
                    bt_add.setEnabled(true);
                    bt_edit.setEnabled(true);
                    bt_delete.setEnabled(true);
                    search=false;
                    txt_search.setText("");
                }
            }
            catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

        }
    }//GEN-LAST:event_bt_searchActionPerformed

    private void rb_temproryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_temproryActionPerformed
        // TODO add your handling code here:
        if(rb_temprory.isSelected())
        {
            rb_permanant.setSelected(false);
            e_employee.setText("");
            employee=true;
        }
        else if(rb_permanant.isSelected())
        {
            rb_temprory.setSelected(false);
            e_employee.setText("");
            employee=true;
        }
        else
        {
            e_employee.setText("Select your Option");
            employee=false;
        }
    }//GEN-LAST:event_rb_temproryActionPerformed

    private void rb_permanantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_permanantActionPerformed
        // TODO add your handling code here:
        if(rb_permanant.isSelected())
        {
            rb_temprory.setSelected(false);
            e_employee.setText("");
            employee=true;
        }
        else if(rb_temprory.isSelected())
        {
            rb_permanant.setSelected(false);
            e_employee.setText("");
            employee=true;
        }
        else
        {
            e_employee.setText("Select your position");
            employee=false;
        }
    }//GEN-LAST:event_rb_permanantActionPerformed

    private void s_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s_employeeActionPerformed
        // TODO add your handling code here:
          if(s_employee.getSelectedIndex()==1)
        {
            rb_permanant.setEnabled(true);
            rb_temprory.setEnabled(true);
            txt_qualification1.setEnabled(true);
        }
        else
        {
            rb_permanant.setEnabled(false);
            rb_temprory.setEnabled(false);
             txt_qualification1.setEnabled(false);
        }
        
        
    }//GEN-LAST:event_s_employeeActionPerformed

    private void ch_singalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_singalaActionPerformed
        // TODO add your handling code here:
        if(ch_english.isSelected() || ch_tamil.isSelected() || ch_singala.isSelected())
        {
            e_language.setText("");
            language=true;
        }
        else
        {
            language=false;
            e_language.setText("Select your language");
        }
    }//GEN-LAST:event_ch_singalaActionPerformed

    private void ch_tamilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_tamilActionPerformed
        // TODO add your handling code here:
        if(ch_english.isSelected() || ch_tamil.isSelected() || ch_singala.isSelected())
        {
            e_language.setText("");
            language=true;
        }
        else
        {
            language=false;
            e_language.setText("Select your language");
        }
    }//GEN-LAST:event_ch_tamilActionPerformed

    private void ch_englishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_englishActionPerformed
        // TODO add your handling code here:
        if(ch_english.isSelected() || ch_tamil.isSelected() || ch_singala.isSelected())
        {
            e_language.setText("");
            language=true;
        }
        else
        {
            language=false;
            e_language.setText("Select your language");
        }
    }//GEN-LAST:event_ch_englishActionPerformed

    private void txt_qualification1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_qualification1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_qualification1ActionPerformed

    private void ch_othActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_othActionPerformed
        // TODO add your handling code here:
        if(ch_oth.isSelected())
        {
            ch_uni.setSelected(false);
            ch_ol.setSelected(false);
            ch_al.setSelected(false);
            e_qualification.setText("");
            qualification=true;
        }
        else
        {
            ch_oth.setSelected(false);
            qualification=false;
            e_qualification.setText("Select your qualification");
        }
    }//GEN-LAST:event_ch_othActionPerformed

    private void ch_alActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_alActionPerformed
        // TODO add your handling code here:
        if(ch_al.isSelected() || ch_ol.isSelected() || ch_uni.isSelected() || ch_oth.isSelected())
        {
            if(ch_al.isSelected() || ch_ol.isSelected() || ch_uni.isSelected())
            {
                ch_oth.setSelected(false);
            }
            e_qualification.setText("");
            qualification=true;
        }
        else
        {
            qualification=false;
            e_qualification.setText("Select your qualification");
        }
    }//GEN-LAST:event_ch_alActionPerformed

    private void ch_olActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_olActionPerformed
        // TODO add your handling code here:
        if(ch_al.isSelected() || ch_ol.isSelected() || ch_uni.isSelected() || ch_oth.isSelected())
        {
            if(ch_al.isSelected() || ch_ol.isSelected() || ch_uni.isSelected())
            {
                ch_oth.setSelected(false);
            }
            e_qualification.setText("");
            qualification=true;
        }
        else
        {
            qualification=false;
            e_qualification.setText("Select your qualification");
        }
    }//GEN-LAST:event_ch_olActionPerformed

    private void txt_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addressActionPerformed

    private void txt_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emailActionPerformed

    private void txt_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_contactActionPerformed

    private void txt_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nicActionPerformed

    private void j_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_statusActionPerformed
        // TODO add your handling code here:
        if(j_status.getSelectedIndex()<0)
        {
            status=false;
            e_status.setText("*");
        }
        else
        {
            e_status.setText("");
            status=true;
        }
    }//GEN-LAST:event_j_statusActionPerformed

    private void rb_femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_femaleActionPerformed
        // TODO add your handling code here:
        if(rb_female.isSelected())
        {
            rb_male.setSelected(false);
            gender=true;
            e_gender.setText("");
        }
        else if(rb_male.isSelected())
        {
            rb_female.setSelected(false);
            gender=true;
            e_gender.setText("");

        }
        else
        {
            e_gender.setText("Select your gender");
            gender=false;
        }
    }//GEN-LAST:event_rb_femaleActionPerformed

    private void rb_maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_maleActionPerformed
        // TODO add your handling code here:
        if(rb_male.isSelected())
        {
            rb_female.setSelected(false);
            gender=true;
            e_gender.setText("");
        }
        else if(rb_female.isSelected())
        {
            rb_male.setSelected(false);
            gender=true;
            e_gender.setText("");

        }
        else
        {
            e_gender.setText("Select your Gender");
            gender=false;
        }
    }//GEN-LAST:event_rb_maleActionPerformed

    private void txt_lastKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lastKeyReleased
        // TODO add your handling code here:
        String firstname=txt_last.getText();
        for(int i=0; i<firstname.length(); i++)
        {
            if(Character.isDigit(firstname.charAt(i)))
            {
                l_name=false;
                e_last.setText("You can't input integers");
                break;
            }
            else
            {
                l_name=true;
                e_last.setText("");
            }
        }
    }//GEN-LAST:event_txt_lastKeyReleased

    private void txt_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lastActionPerformed

    private void txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_nameKeyTyped

    private void txt_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyReleased
        // TODO add your handling code here:
        String firstname=txt_name.getText();
        for(int i=0; i<firstname.length(); i++)
        {
            if(Character.isDigit(firstname.charAt(i)))
            {
                f_name=false;
                e_name.setText("You can't input integers");
                break;
            }
            else
            {
                f_name=true;
                e_name.setText("");
            }
        }
    }//GEN-LAST:event_txt_nameKeyReleased

    private void txt_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_nameKeyPressed

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void txt_nameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt_nameInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameInputMethodTextChanged

    private void txt_nameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_nameMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_nameMouseReleased

    private void txt_nameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_nameMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_nameMouseExited

    private void txt_nameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_nameMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameMouseEntered

    private void txt_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nicKeyPressed

    private void txt_nicMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_nicMouseReleased
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_txt_nicMouseReleased

    private void txt_nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyReleased
        // TODO add your handling code here:
        /*String nicnumber=txt_nic.getText();
        
        for(int i=0; i<nicnumber.length(); i++)
        {
        if(i!=10)
        {
            nic=false;
            e_nic.setText("Input correct NIC");
        }
        else
        {
            int len=nicnumber.length();
            char v1=nicnumber.charAt(len-1);
            
            if(v1=='v' || v1=='V')
            {
                try
                {
                    for(int j=0; j<nicnumber.length(); j++)
                    {
                        if(Character.isDigit(nicnumber.charAt(i)))
                        {
                            e_nic.setText("");
                            nic=true;
                        }
                        else
                        {
                            e_nic.setText("Input correct NIC");
                            nic=false;
                            break;
                        }
                    }
                }
                catch(NumberFormatException ex)
                {
                    e_nic.setText("Input a Number");
                    nic=false;
                }
            }
            else
            {
                e_nic.setText("Input V or v at last");
                nic=false;
            }
        }
        }*/
    }//GEN-LAST:event_txt_nicKeyReleased

    private void ch_uniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_uniActionPerformed
        // TODO add your handling code here:
        if(ch_al.isSelected() || ch_ol.isSelected() || ch_uni.isSelected() || ch_oth.isSelected())
        {
            if(ch_al.isSelected() || ch_ol.isSelected() || ch_uni.isSelected())
            {
                ch_oth.setSelected(false);
            }
            e_qualification.setText("");
            qualification=true;
        }
        else
        {
            qualification=false;
            e_qualification.setText("Select your qualification");
        }
    }//GEN-LAST:event_ch_uniActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        try {
            //Class.forName("com.mysql.jdbc.Driver");
            //conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/inpatientmanagement","root","");
            String Report="C:\\Users\\it17039000\\Documents\\NetBeansProjects\\Intigration1\\src\\HumanResourceManagement\\report1.jrxml";
            
            JasperReport jr = JasperCompileManager.compileReport(Report);  
            JasperPrint jp = JasperFillManager.fillReport(jr,null,con);
            JasperViewer.viewReport(jp);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, ex);
        
        }         
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        txt_name.setText("John");
  txt_last.setText("Kitty");
  j_status.setSelectedItem("Single");
  ((JTextField)datedob.getDateEditor().getUiComponent()).setText("01.03.1990");;
txt_nic.setText("951534546V");
txt_contact.setText("0777145687");
txt_email.setText("johnkitty@gmail.com");
txt_address.setText("Navaly South, Manipay,Jaffna");
txt_qualification1.setText("Cardiologist");
s_employee.setSelectedItem("Doctor");
((JTextField)datejoin.getDateEditor().getUiComponent()).setText("01.02.2010");;
txt_password1.setText("1234567890");
txt_password2.setText("1234567890");

    }//GEN-LAST:event_jButton3ActionPerformed

    
    private void check()
    {
        if(txt_password1.getText().equals("") || txt_password2.getText().equals(""))
        {
            password=false;
            e_password1.setText("Input a valid password");
            e_password2.setText("");
        }
        else if(txt_password1.getText().length()!=10 && txt_password2.getText().length()!=10)
        {
            password=false;
            e_password1.setText("Input minimum 10 charecters required");
        }
        else if(txt_password1.getText().equals(txt_password2.getText()))
        {
            password=true;
            e_password1.setText("");
            e_password2.setText("");
        }
        else
        {
            password=false;
            e_password1.setText("Both password must be same");
            e_password2.setText("Both password must be same");
        }
        if(ch_ol.isSelected() || ch_al.isSelected() || ch_oth.isSelected())
        {
            qualification=true;
            e_qualification.setText("");
        }
        else
        {
            qualification=false;
            e_qualification.setText("Select your Qualification");
        }
        
        if(ch_tamil.isSelected() || ch_english.isSelected() || ch_oth.isSelected())
        {
            language=true;
            e_language.setText("");
        }
        else
        {
            language=true;
            e_language.setText("Select your Language");
        }
        
        if(s_employee.getSelectedIndex()==1)
        {
            rb_permanant.setEnabled(true);
            rb_temprory.setEnabled(true);
            if(rb_permanant.isSelected() || rb_temprory.isSelected())
            {
                employee=true;
                e_employee.setText("");
            }
            else
            {
                employee=false;
                e_employee.setText("Select your Option");
            }
        }
        else
        {
            e_employee.setText("");
            employee=true;
            rb_permanant.setEnabled(false);
            rb_temprory.setEnabled(false);
        }
        if(s_employee.getSelectedItem().equals("Select"))
        {
            desigination=false;
            e_desigination.setText("Select a Desigination");
        }
        else
        {
            desigination=true;
            e_desigination.setText("");
        }
        
        
        
        if(j_status.getSelectedItem()=="Select")
        {
            status=false;
            e_status.setText("Select your Status");
        }
        else
        {
            status=true;
            e_status.setText("");
        }
        
        if(rb_male.isSelected() || rb_female.isSelected())
        {
            gender=true;
            e_gender.setText("");
        }
        else
        {
            gender=false;
            e_gender.setText("Select your Gender");
        }
        
        
        if(txt_qualification1.getText().equals(""))
        {
            qualificationdetails=false;
            e_qualificationdetails.setText("Select your qualification");
        }
        else
        {
            qualificationdetails=true;
            e_qualificationdetails.setText("");
        }
        
        SimpleDateFormat formatter1 = new SimpleDateFormat("dd/MM/yyyy");
        if(datejoin.getDate()==null)
        {
            joindate=false;
            e_joindate.setText("Select a date");
        }
        else
        {
            joindate=true;
            e_joindate.setText("");
        }
        
        if(txt_email.getText().equals(""))
        {
            e_email.setText("Input your email address");
            email=false;
        }
        else
        {
            String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
            java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
            java.util.regex.Matcher m = p.matcher(txt_email.getText());
            if(m.matches())
            {
                email=true;
                e_email.setText("");
            }
            else
            {
                email=false;
                e_email.setText("Input a correcct email address");
            }
        }
        
        if(txt_address.getText().equals(""))
        {
            address=false;
            e_address.setText("Input Your address");
        }
        else
        {
            address=true;
            e_address.setText("");
        }
        
        if(txt_contact.getText().equals(""))
        {
            contact=false;
            e_contact.setText("Input your contact");
        }
        else
        {
            contact=true;
            e_contact.setText("");
        }
        
        if(txt_nic.getText().equals(""))
        {
            nic=false;
            e_nic.setText("Input your NIC number");
        }
        else
        {
            nic=true;
            e_nic.setText("");
        }
        
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        if(datedob.getDate()==null)
        {
            dob=false;
            e_dob.setText("Select a date");
        }
        else
        {
            dob=true;
            e_dob.setText("");
        }
        
        if(txt_last.getText().equals(""))
        {
            l_name=false;
            e_last.setText("Input your Lastname");
        }
        else
        {
            l_name=true;
            e_last.setText("");
        }
        
        if(txt_name.getText().equals(""))
        {
            f_name=false;
            e_name.setText("Input your Firstname");
        }
        else
        {
            f_name=true;
            e_name.setText("");
        }
        
        String nicnumber=txt_nic.getText();
        if(nicnumber.length()<10 || nicnumber.length() <0)
        {
            nic=false;
            e_nic.setText("Input correct NIC number");
        }
        else
        {
            if(nicnumber.endsWith("v") || nicnumber.endsWith("V"))
            {
                try
                {
                    int intnic=Integer.parseInt(nicnumber.substring(0, 8));
                    e_nic.setText("");
                    nic=true;
                }
                catch(NumberFormatException ex)
                {
                    e_nic.setText("Input your Correct NIC number");
                    nic=false;
                }
            }
            else
            {
                e_nic.setText("Input your correcct NIC number");
                nic=false;
            }
        }
        
        String contactnumstring=txt_contact.getText();
        
        if(contactnumstring.length()<10)
        {
            e_contact.setText("Input your correct contact number");
            contact=false;
        }
        else
        {
            try
            {
                int contactnumint=Integer.parseInt(contactnumstring);
                contact=true;
                e_contact.setText("");
            }
            catch(NumberFormatException ex)
            {
                e_contact.setText("Input your correct contact number");
                contact=false;
            }
                        
        }
     
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_add;
    private javax.swing.JButton bt_cancel;
    private javax.swing.JButton bt_delete;
    private javax.swing.JButton bt_edit;
    private javax.swing.JButton bt_search;
    private javax.swing.JCheckBox ch_al;
    private javax.swing.JCheckBox ch_english;
    private javax.swing.JCheckBox ch_ol;
    private javax.swing.JCheckBox ch_oth;
    private javax.swing.JCheckBox ch_singala;
    private javax.swing.JCheckBox ch_tamil;
    private javax.swing.JCheckBox ch_uni;
    private com.toedter.calendar.JDateChooser datedob;
    private com.toedter.calendar.JDateChooser datejoin;
    private javax.swing.JLabel e_address;
    private javax.swing.JLabel e_contact;
    private javax.swing.JLabel e_desigination;
    private javax.swing.JLabel e_dob;
    private javax.swing.JLabel e_email;
    private javax.swing.JLabel e_employee;
    private javax.swing.JLabel e_gender;
    private javax.swing.JLabel e_joindate;
    private javax.swing.JLabel e_language;
    private javax.swing.JLabel e_last;
    private javax.swing.JLabel e_name;
    private javax.swing.JLabel e_nic;
    private javax.swing.JLabel e_password1;
    private javax.swing.JLabel e_password2;
    private javax.swing.JLabel e_qualification;
    private javax.swing.JLabel e_qualificationdetails;
    private javax.swing.JLabel e_status;
    private javax.swing.JLabel id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> j_status;
    private javax.swing.JRadioButton rb_female;
    private javax.swing.JRadioButton rb_male;
    private javax.swing.JRadioButton rb_permanant;
    private javax.swing.JRadioButton rb_temprory;
    private javax.swing.JComboBox<String> s_employee;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_contact;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_last;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_nic;
    private javax.swing.JPasswordField txt_password1;
    private javax.swing.JPasswordField txt_password2;
    private javax.swing.JTextField txt_qualification1;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTable view;
    // End of variables declaration//GEN-END:variables
}
